// DYNAMIC IMPLEMENTATION OF STACK (Method 1)
#include <stdio.h>
#include <stdlib.h>
void push(int);
int pop(void);
void display(void);
struct node
{
    int data;
    struct node* link;
};
struct node* top = NULL;
int main()
{
    int ch,n,p;
    while(1)
    {
        printf("\n1.PUSH\n");
        printf("2.POP\n");
        printf("3.DISPLAY\n");
        printf("4.EXIT\n");
        printf("Enter your choice\n");
        scanf("%d",&ch);
        switch(ch)
        {
            case 1:
                printf("Enter the element to be pushed\n");
                scanf("%d",&n);
                push(n);
                printf("Push Successfull\n");
                break;
            case 2:
                p = pop();
                if(p==0)
                    printf("STACK UNDERFLOW\n");
                else
                    printf("Popped Element : %d\n",p);
                break;
            case 3:
                display();
                break;
            case 4:
                exit(0);
                break;
            default:
                printf("Invalid Choice\n");
                break;
        }
    }
    return 0;
}
void push(int n)
{
    struct node* temp;
    temp = (struct node*)malloc(sizeof(struct node));
    temp->data = n;
    temp->link = top;
    top = temp;
}
int pop()
{
    struct node* temp;
    int a;
    if(top==NULL)
        return 0;
    else
    {
        temp = top;
        a = top->data;
        top = top->link;
        temp->link = NULL;
    }
    return a;
}
void display()
{
    struct node* temp;
    if(top==NULL)
        printf("STACK UNDERFLOW\n");
    else
    {
        temp = top;
        while(temp!=NULL)
        {
            printf("%d\n",temp->data);
            temp = temp->link;
        }
    }
}
